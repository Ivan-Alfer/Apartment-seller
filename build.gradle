plugins {
	id 'org.springframework.boot' version '2.1.5.RELEASE'
	id 'java'
}

ext {
    mapstructVersion = "1.3.0.Final"
	guavaVersion= "27.1-jre"
	jjwtVersion= "0.9.1"
	gsonVersion= "2.8.5"
	testcontainerVersion= "1.11.2"
	springSecurityTestVersion= "5.1.5.RELEASE"
	springCloud= "2.1.1.RELEASE"
}

apply plugin: 'io.spring.dependency-management'

group = 'com.apartment-seller'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-web')
	runtime('org.springframework.boot:spring-boot-devtools')
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.springframework.boot:spring-boot-configuration-processor')
	// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-mail
	compile ('org.springframework.boot:spring-boot-starter-mail')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	// https://mvnrepository.com/artifact/org.springframework.security/spring-security-test
	testCompile ("org.springframework.security:spring-security-test:${springSecurityTestVersion}")
	// https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter-netflix-eureka-server
	compile("org.springframework.cloud:spring-cloud-starter-netflix-eureka-server:${springCloud}")
	// https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter-netflix-zuul
	compile ("org.springframework.cloud:spring-cloud-starter-netflix-zuul:${springCloud}")
    compile ("org.springframework.cloud:spring-cloud-starter-openfeign:${springCloud}")
	


	compile('org.postgresql:postgresql')

	compile('org.projectlombok:lombok')

	// https://mvnrepository.com/artifact/org.thymeleaf/thymeleaf-spring5
	compile('org.thymeleaf:thymeleaf-spring5')
	
	// https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt
	compile("io.jsonwebtoken:jjwt:${jjwtVersion}")

    // https://mvnrepository.com/artifact/com.google.guava/guava
    compile("com.google.guava:guava:${guavaVersion}")

    compile("org.mapstruct:mapstruct:${mapstructVersion}")
	compile("org.mapstruct:mapstruct-processor:${mapstructVersion}")

	// https://mvnrepository.com/artifact/com.google.code.gson/gson
	compile ("com.google.code.gson:gson:${gsonVersion}")

	// https://mvnrepository.com/artifact/org.testcontainers/testcontainers
	compile ("org.testcontainers:testcontainers:${testcontainerVersion}")

	// https://mvnrepository.com/artifact/org.testcontainers/testcontainers
	compile ("org.testcontainers:postgresql:${testcontainerVersion}")

}
